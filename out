#!/bin/sh

set -e
exec 3>&1
exec 1>&2

# for jq
PATH=/usr/local/bin:$PATH

inputs=$(mktemp /tmp/resource-in.XXXXXX)

cat > $inputs <&0

app_id=$(jq -r '.source.app_id' < $inputs)

api_key=$(jq -r '.source.api_key' < $inputs)

revision=$(jq -r '(.params.revision // empty)' < $inputs)

changelog=$(jq -r '(.params.changelog // empty)' < $inputs)

description=$(jq -r '(.params.description // empty)' < $inputs)

user=$(jq -r '(.params.user // empty)' < $inputs)

body=$(jq -c -n \
	--arg revision "${revision}" \
	--arg changelog "${changelog}" \
	--arg description "${description}" \
	--arg user "${user}" \
	'{
		deployment: {
			revision: $revision,
			changelog: $changelog,
			description: $description,
			user: $user
		}
	}'
)

curl -X POST "https://api.newrelic.com/v2/applications/${app_id}/deployments.json" \
     -H "X-Api-Key:${api_key}" -i \
     -H "Content-Type: application/json" \
     -d ${body}

jq -n \
    --arg ts $(date +%s) \
    --arg revision "${revision}" \
    --arg changelog "${changelog}" \
    --arg description "${description}" \
    --arg user "${user}" \
    '{
        version: {
            timestamp: $ts
        },
        metadata: [
            {name: "revision", value: $revision},
            {name: "changelog", value: $changelog},
            {name: "description", value: $description},
            {name: "user", value: $user}
        ]
    }' >&3